"use strict";(self.webpackChunkmintlayer_docs=self.webpackChunkmintlayer_docs||[]).push([[268],{104:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>j,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"mojito-inject/getting-started","title":"Getting Started","description":"The Mojito Wallet browser extension injects a global object window.mojito into every page. This object acts as a lightweight interface between your decentralized app (dApp) and the Mojito wallet, allowing you to request access, send transactions, and react to wallet state changes.","source":"@site/docs/mojito-inject/getting-started.md","sourceDirName":"mojito-inject","slug":"/mojito-inject/getting-started","permalink":"/mintlayer-docs/docs/mojito-inject/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/mintlayer/mintlayer-docs/tree/main/docs/mojito-inject/getting-started.md","tags":[],"version":"current","frontMatter":{"title":"Getting Started","sidebar_label":"Introduction"},"sidebar":"tutorialSidebar","previous":{"title":"Mojito Inject","permalink":"/mintlayer-docs/docs/category/mojito-inject"},"next":{"title":"Trezor","permalink":"/mintlayer-docs/docs/category/trezor"}}');var i=o(4848),s=o(8453);const r={title:"Getting Started",sidebar_label:"Introduction"},l="Getting Started with window.mojito",c={},d=[{value:"Version Support",id:"version-support",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"mojito.isExtension",id:"mojitoisextension",level:3},{value:"mojito.version",id:"mojitoversion",level:3},{value:"mojito.connectedAddresses",id:"mojitoconnectedaddresses",level:3},{value:"mojito.connect()",id:"mojitoconnect",level:3},{value:"mojito.restore()",id:"mojitorestore",level:3},{value:"mojito.disconnect()",id:"mojitodisconnect",level:3},{value:"mojito.request()",id:"mojitorequest",level:3},{value:"mojito.on()",id:"mojitoon",level:3},{value:"Example integration",id:"example-integration",level:2},{value:"Security",id:"security",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"getting-started-with-windowmojito",children:["Getting Started with ",(0,i.jsx)(n.code,{children:"window.mojito"})]})}),"\n",(0,i.jsxs)(n.p,{children:["The Mojito Wallet browser extension injects a global object ",(0,i.jsx)(n.code,{children:"window.mojito"})," into every page. This object acts as a lightweight interface between your decentralized app (dApp) and the Mojito wallet, allowing you to request access, send transactions, and react to wallet state changes."]}),"\n",(0,i.jsx)(n.h2,{id:"version-support",children:"Version Support"}),"\n",(0,i.jsx)(n.p,{children:"Mojito inject API is available in extension versions 1.4.0 and above."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const version = await window.mojito.version;\nconsole.log('Mojito version:', version);\n// should be 1.4.0 or higher\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check for a proper version"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'if (!window.mojito) {\n  alert("Please install or update Mojito Wallet to version 1.4.0 or higher.");\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Connect to the user's Mojito wallet with approval"}),"\n",(0,i.jsx)(n.li,{children:"Restore existing sessions automatically"}),"\n",(0,i.jsx)(n.li,{children:"Sign transactions via user approval"}),"\n",(0,i.jsx)(n.li,{children:"Check if a wallet is connected"}),"\n",(0,i.jsx)(n.li,{children:"Subscribe to wallet events"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["No additional installation is required. If the user has the Mojito browser extension installed and enabled, the ",(0,i.jsx)(n.code,{children:"window.mojito"})," object will be available on page load."]}),"\n",(0,i.jsx)(n.p,{children:"You can check for the presence of the wallet with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'if (window.mojito?.isExtension) {\n  console.log("Mojito wallet is available.");\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,i.jsx)(n.h3,{id:"mojitoisextension",children:"mojito.isExtension"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.isExtension: boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Indicates whether the Mojito wallet extension is installed and enabled."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'if (window.mojito?.isExtension) {\n  console.log("Mojito wallet is available.");\n} else {\n  console.log("Please install Mojito Wallet.");\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mojitoversion",children:"mojito.version"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.version: string"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the version of the Mojito wallet extension."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const version = await window.mojito.version;\nconsole.log("Mojito version:", version);\n// should be 1.4.0 or higher\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mojitoconnectedaddresses",children:"mojito.connectedAddresses"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.connectedAddresses: Addresses | null"})}),"\n",(0,i.jsxs)(n.p,{children:["Returns the currently connected addresses. If no session is active, it returns ",(0,i.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const addresses = window.mojito.connectedAddresses;\nif (addresses) {\n  console.log("Connected addresses:", addresses.testnet.receiving);\n} else {\n  console.log("No active session.");\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mojitoconnect",children:"mojito.connect()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.connect(): Promise<Addresses>"})}),"\n",(0,i.jsx)(n.p,{children:"Prompts the user to approve wallet connection."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const addresses = await window.mojito.connect();\nconsole.log("Connected addresses:", addresses.testnet.receiving);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mojitorestore",children:"mojito.restore()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.restore(): Promise<Addresses | null>"})}),"\n",(0,i.jsx)(n.p,{children:"Attempts to restore a previously approved session without user interaction."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const restored = await window.mojito.restore();\nif (restored) {\n  console.log("Session restored", restored);\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can skip restore by passing a flag to your SDK client if you want manual connection only."}),"\n",(0,i.jsx)(n.h3,{id:"mojitodisconnect",children:"mojito.disconnect()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.disconnect(): void"})}),"\n",(0,i.jsx)(n.p,{children:"Clears the current session and notifies your dApp via an event."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"window.mojito.disconnect();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"mojitorequest",children:"mojito.request()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.request(method: string, params?: object): Promise;"})}),"\n",(0,i.jsx)(n.p,{children:"Low-level method to send custom requests to the wallet (e.g., for signing or advanced features)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const result = await window.mojito.request("signTransaction", {\n  txData: { /* your transaction here */ }\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mojitoon",children:"mojito.on()"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"mojito.on(event: string, callback: (data: any) => void): void"})}),"\n",(0,i.jsx)(n.p,{children:"Subscribe to wallet events."}),"\n",(0,i.jsx)(n.p,{children:"Available events:\n\u2022\taccountsChanged: fired when the connected account changes\n\u2022\tdisconnect: fired when the user disconnects or session is cleared"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'window.mojito.on("disconnect", () => {\n  console.log("Wallet was disconnected");\n});\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example-integration",children:"Example integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'async function setup() {\n  if (!window.mojito?.isExtension) {\n    alert("Mojito Wallet is not installed");\n    return;\n  }\n\n  const restored = await window.mojito.restore();\n  if (!restored) {\n    await window.mojito.connect();\n  }\n\n  // Now the app can use connected addresses\n  const addresses = window.mojito.connectedAddresses;\n  console.log("Using addresses:", addresses);\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"security",children:"Security"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Private keys never leave the wallet extension."}),"\n",(0,i.jsx)(n.li,{children:"dApps must explicitly request permission to connect."}),"\n",(0,i.jsx)(n.li,{children:"Signing requests must be manually approved by the user."}),"\n",(0,i.jsx)(n.li,{children:"The window.mojito object only exposes public information and events."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Happy building! \ud83d\ude80"})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var t=o(6540);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);